// license-header java merge-point
/* Autogenerated on 04/28/2016 01:37:19-0400 by AndroMDA!
 *
 * TEMPLATE:    jaxws\WebServiceMethodImpl.vsl in andromda-webservices-cartridge
 * MODEL CLASS: AndroMDAModel::org.sw.andromda.lastrest::service::SearchService::performSearch
 * STEREOTYPE:  Service on SearchService
 * STEREOTYPE:  WebService on SearchService
 * STEREOTYPE:  WebServiceOperation on performSearch
*/
package org.sw.andromda.lastrest.service;

/**
 * WebService Service Method Implementation for the SearchService
 * service org.andromda.cartridges.webservice.metafacades.WebServiceOperationLogicImpl[org.sw.andromda.lastrest.service.SearchService.performSearch].
 * 
 */

public class PerformSearchImpl
{
    /**
     * Constructor
     */
    public PerformSearchImpl()
    {
        //Documented empty code block - avoid compiler warning
    }

    /**
     * Delegate for TestCase SearchServiceWSDelegateTest and SearchServiceSEIImplTest
     */
    public static void performSearchSetUp()
    {
        // Insert your custom code here for additional required unit test case setup for service method
    }

    /**
     * Delegate for TestCase SearchServiceWSDelegateTest and SearchServiceSEIImplTest
     */
    public static void performSearchTearDown()
    {
        // Insert your custom code here for additional required unit test case tear down for service method
    }

   /**
    * Transforms the performSearch service method parameters on SearchService.
    * 
    * @param queryTerm datatype.String multiplicity=1..1
    * Replace void with transformed type, use target.set() values to create transformation
    */
    public static void performSearchTransformInput(
        final java.lang.String queryTerm
    )
    {

        if (queryTerm != null)
        {
            // transform(java.lang.String);
        }
    }

   /**
    * Transforms input to an output response for performSearch service method on SearchService.
    * 
    * @return performSearchResponse org.sw.andromda.lastrest.vo.SearchResultVO
    */
    public static org.sw.andromda.lastrest.vo.SearchResultVO performSearchTransformResponse(
        /* Domain response to be transformed to service response */)
        // throws TransformationException?
    {
        // Dummy return value implementation with default values...
        // Iterate down through all complex types and create default dummy constructor and attribute values
        org.sw.andromda.lastrest.vo.SearchResultVO rtn = new org.sw.andromda.lastrest.vo.SearchResultVO();

        // Property documents isMany has 5 properties: id name inStock price features
        org.sw.andromda.lastrest.vo.DocumentVO documents = new org.sw.andromda.lastrest.vo.DocumentVO();
        documents.setId("id");
        documents.setName("name");
        documents.setInStock(Boolean.TRUE);
        documents.setPrice(java.lang.Double.valueOf(1));
        documents.getFeatures().add("features");
        rtn.getDocuments().add(documents);

        return rtn;
    }

    /** Create input test data for SearchService performSearch
     * Used by webservice WSClient (against service) and core service WSDelegateTest (against implementation).
     * Return wrapped parameters:
     * queryTerm: java.lang.String
     * @return performSearchReturn org.sw.andromda.lastrest.service.PerformSearch WS Input parameter wrapper (assumes wrapped WSDL)
     **/
    public static org.sw.andromda.lastrest.service.PerformSearch performSearchCreateInput()
    {
        org.sw.andromda.lastrest.service.PerformSearch performSearchReturn = new org.sw.andromda.lastrest.service.PerformSearch();

        // parameter1 queryTermParam1 with 0 properties:
        java.lang.String queryTermParam1 = "queryTerm";
        performSearchReturn.setQueryTerm(queryTermParam1);

        return performSearchReturn;
    }
}

